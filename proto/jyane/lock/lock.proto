syntax = "proto3";

package jyane.lock;

import "google/protobuf/duration.proto";

message AcquireRequest {
  string owner = 1;
  string key = 2;
  google.protobuf.Duration duration = 3;
}

message AcquireResponse {
  google.protobuf.Duration duration = 1;
}

message TryAcquireRequest {
  // owner is the owner, length of owner must be less than 256.
  string owner = 1;

  // key is the key, length of key must be less than 256.
  string key = 2;

  // time-to-live in seconds, nanos will be discarded.
  // Muximum duration is 24 hours.
  google.protobuf.Duration duration = 3;
}

message TryAcquireResponse {
  // time-to-live in seconds
  google.protobuf.Duration duration = 1;
}

message ReleaseRequest {
  string owner = 1;
  string key = 2;
}

message ReleaseResponse {
}

service LockService {
  // Acquire acquires a lock, if lock was already exists, waits for the release.
  rpc Acquire(AcquireRequest) returns (stream AcquireResponse) {}

  // TryAcquire acqires a lock immediately, if lock was already exists, returns an error immediately.
  rpc TryAcquire(TryAcquireRequest) returns (TryAcquireResponse) {}

  // Release release a lock immediately.
  rpc Release(ReleaseRequest) returns (ReleaseResponse) {}
}
